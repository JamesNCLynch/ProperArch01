@model ProperArch01.Contracts.Models.ClassType.ClassTypeDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <div>
                <h4>ClassType</h4>
                <hr />
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Name)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Name)
                    </dd>

                    @*<dt>
                @Html.DisplayNameFor(model => model.IsActive)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsActive)
            </dd>*@

                    @*<dt>
                @Html.DisplayNameFor(model => model.ClassColour)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ClassColour)
            </dd>*@

                    <dt>
                        @Html.DisplayNameFor(model => model.Difficulty)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Difficulty)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Description)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Description)
                    </dd>

                </dl>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            @if (User.IsInRole(ProperArch01.Contracts.Constants.RoleNames.AdminName))
            {
                <p>
                    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
                    @Html.ActionLink("Back to List", "Index")
                </p>
            }

            @if (User.IsInRole(ProperArch01.Contracts.Constants.RoleNames.AttendeeName))
            {
                if (Model.UpcomingScheduledClasses != null && Model.UpcomingScheduledClasses.Any())
                {
                    <h4>Next scheduled @Model.Name times:</h4>

                    <table class="table table-striped table-bordered">
                        <tr>
                            <th>Day/time</th>
                            <th></th>
                        </tr>
                        @foreach (var item in Model.UpcomingScheduledClasses)
                        {
                            <tr>
                                <td>@item.ScheduledClassStartTime</td>
                                <td>
                                    @Html.ActionLink("View scheduled class", "Details", "ScheduledClass", new { Id = item.ScheduledClassId }, null)
                                </td>
                            </tr>
                        }
                    </table>
                }
                else
                {
                    <h4 class="deemphasised"></h4>
                }
            }
        </div>
    </div>
</div>


