@model ProperArch01.Contracts.Models.ClassType.EditClassTypeViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div class="container">
    <h4>ClassType</h4>
    <hr />
    <div class="row">
        <div class="col-md-8">
            @using (Html.BeginForm("Edit", "ClassType", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(model => model.ImageFileName)

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ClassColour, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.ClassColour, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ClassColour, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Difficulty, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Difficulty, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Difficulty, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { maxlength = "500", htmlAttributes = new { @class = "form-control", rows = "4" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Update image to new file", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.TextBoxFor(model => model.ImageFile, new { type = "file" })
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-4">
            <img src="~/Assets/ClassType/@Model.ImageFileName" class="img-responsive"/>
        </div>
    </div>
</div>




<div>
    @Html.ActionLink("Back to Details", "Details", new { Id = Model.Id})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
